{
    "openapi": "3.0.0",
    "info": {
        "title": "Job Portal API",
        "description": "A comprehensive job portal API with RSA-512 signed JWT authentication. The system uses separate access and refresh tokens stored in a database with automatic revocation and blacklisting capabilities.",
        "contact": {
            "name": "Job Portal API Support",
            "url": "https://example.com/support",
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "Job Portal API Server - All endpoints are prefixed with /api/v1"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account in the job portal system. Returns user data with both access and refresh JWT tokens for immediate use.",
                "operationId": "157cc8a168a7e9674fcce1d5cb758b2f",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages (e.g., en, es, fr)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "passwordConfirm"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User full name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 1,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Valid email address (must be unique)",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "Password with minimum 8 characters",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "SecurePass123!"
                                    },
                                    "passwordConfirm": {
                                        "description": "Password confirmation (must match password)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecurePass123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered with JWT tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid or missing required fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/authenticate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "description": "Authenticate a user with email and password. Returns user data with both access and refresh JWT tokens. Tokens are RSA-512 signed and stored in the database for security tracking.",
                "operationId": "94f76d67623cf4af340a84fc73d94c88",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Registered user email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecurePass123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful with JWT tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed - Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid or missing email/password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/revoke": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke user tokens",
                "description": "Revoke the current JWT token and all tokens in the same session group. This effectively logs out the user from all devices. Requires a valid access token.",
                "operationId": "5d764efce2e475c6aefd8a1751805b2f",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tokens successfully revoked - User logged out from all devices"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid, expired, or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT tokens",
                "description": "Generate new access and refresh JWT tokens using a valid refresh token. The old tokens are automatically revoked. This endpoint requires a refresh token, not an access token.",
                "operationId": "e4dd00c1f320e0642443ccd7c5e2b39e",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New tokens successfully generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "new_tokens": {
                                            "description": "Array containing new access and refresh tokens",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Token"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid, expired, revoked, or missing refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "refreshAuth": []
                    }
                ]
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user profile",
                "description": "Retrieve the authenticated user's profile information using a valid access token. Returns user data without tokens.",
                "operationId": "9c0012129fcf8faadda5ee3f7eabcc6e",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid, expired, revoked, or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/industries": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "Get paginated list of industries",
                "description": "Retrieve a paginated list of industries with filtering, searching, and sorting capabilities. Optionally include related occupations. Supports full-text search by industry name.",
                "operationId": "5967c7862d5b84792416543636d6d686",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (starts from 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "example": "id"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter industries by name (case-insensitive partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Technology"
                        }
                    },
                    {
                        "name": "relations[occupations]",
                        "in": "query",
                        "description": "Include related occupations in the response (set to \"1\" or \"true\" to include)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "false",
                                "true"
                            ],
                            "example": "1"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of industries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Array of industry objects",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Industry"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v1/industries?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v1/industries?page=10"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v1/industries?page=2"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 95
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/industries/{industry}": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "Get specific industry by ID",
                "description": "Retrieve a specific industry by its ID. Always includes related occupations in the response to provide complete industry information.",
                "operationId": "9631b6afd03fcc50e0e9dcbe97e12b44",
                "parameters": [
                    {
                        "name": "industry",
                        "in": "path",
                        "description": "Industry ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industry retrieved successfully with related occupations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Industry"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Industry not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the industry was not found",
                                            "type": "string",
                                            "example": "No query results for model [App\\Models\\Industry] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/occupations": {
            "get": {
                "tags": [
                    "Occupations"
                ],
                "summary": "Get paginated list of occupations",
                "description": "Retrieve a paginated list of occupations with filtering, searching, and sorting capabilities. Supports full-text search by occupation name.",
                "operationId": "82221ea60dbba94666619150e93540ed",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (starts from 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 10
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "example": "id"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter occupations by name (case-insensitive partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Engineer"
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of occupations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Array of occupation objects",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Occupation"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v1/occupations?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v1/occupations?page=25"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v1/occupations?page=2"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 245
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/occupations/{occupation}": {
            "get": {
                "tags": [
                    "Occupations"
                ],
                "summary": "Get specific occupation by ID",
                "description": "Retrieve a specific occupation by its ID. Returns basic occupation information without related industry data to keep response lightweight.",
                "operationId": "5391d690ac9e5aa27a961d826f0cdd31",
                "parameters": [
                    {
                        "name": "occupation",
                        "in": "path",
                        "description": "Occupation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "Preferred language for response messages",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Occupation retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Occupation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Occupation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the occupation was not found",
                                            "type": "string",
                                            "example": "No query results for model [App\\Models\\Occupation] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ValidationError": {
                "title": "Validation Error Response",
                "description": "Standard Laravel validation error response",
                "properties": {
                    "message": {
                        "description": "Human readable error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Field-specific validation errors",
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required.",
                                "The email must be a valid email address."
                            ],
                            "password": [
                                "The password must be at least 8 characters."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "AuthenticationError": {
                "title": "Authentication Error Response",
                "description": "Authentication failure response",
                "properties": {
                    "message": {
                        "description": "Authentication error message",
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "Industry": {
                "title": "Industry",
                "description": "Industry model representing business sectors",
                "properties": {
                    "id": {
                        "description": "Unique industry identifier",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Industry name",
                        "type": "string",
                        "example": "Technology"
                    },
                    "created_at": {
                        "description": "Timestamp when the industry was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the industry was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00.000000Z"
                    },
                    "occupations": {
                        "description": "Array of related occupations (only included when relations[occupations] is requested or in show endpoint)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Occupation"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Occupation": {
                "title": "Occupation",
                "description": "Occupation model representing job roles within industries",
                "properties": {
                    "id": {
                        "description": "Unique occupation identifier",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Occupation name",
                        "type": "string",
                        "example": "Software Engineer"
                    },
                    "industry_id": {
                        "description": "ID of the industry this occupation belongs to",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "Timestamp when the occupation was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00.000000Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when the occupation was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00.000000Z"
                    },
                    "industry": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Industry"
                            }
                        ],
                        "nullable": true,
                        "description": "Related industry object (when relationship is loaded)"
                    }
                },
                "type": "object"
            },
            "Token": {
                "title": "JWT Token",
                "description": "RSA-512 signed JWT token with database backing",
                "required": [
                    "headers",
                    "claims",
                    "token"
                ],
                "properties": {
                    "headers": {
                        "description": "JWT token headers with RSA-512 signature algorithm",
                        "type": "object",
                        "example": {
                            "typ": "JWT",
                            "alg": "RS512"
                        }
                    },
                    "claims": {
                        "description": "JWT token claims with user and token metadata",
                        "type": "object",
                        "example": {
                            "iss": "job-portal-api",
                            "sub": "1",
                            "aud": "job-portal-client",
                            "exp": 1737633000,
                            "nbf": 1737547200,
                            "iat": 1737547200,
                            "jti": "01936b2e-4c3e-7234-9876-0123456789ab",
                            "typ": "access",
                            "grp": "auth_session_123"
                        }
                    },
                    "token": {
                        "description": "The complete JWT token string (RSA-512 signed)",
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpc3MiOiJqb2ItcG9ydGFsLWFwaSIsInN1YiI6IjEiLCJhdWQiOiJqb2ItcG9ydGFsLWNsaWVudCIsImV4cCI6MTczNzYzMzAwMCwibmJmIjoxNzM3NTQ3MjAwLCJpYXQiOjE3Mzc1NDcyMDAsImp0aSI6IjAxOTM2YjJlLTRjM2UtNzIzNC05ODc2LTAxMjM0NTY3ODlhYiIsInR5cCI6ImFjY2VzcyIsImdycCI6ImF1dGhfc2Vzc2lvbl8xMjMifQ.signature..."
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model with JWT token support",
                "required": [
                    "id",
                    "name",
                    "email",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Unique user identifier",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User email address (unique)",
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "description": "Email verification timestamp (null if not verified)",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T09:30:00.000000Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "User creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T09:30:00.000000Z"
                    },
                    "updated_at": {
                        "description": "User last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T09:30:00.000000Z"
                    },
                    "new_tokens": {
                        "description": "Array of newly generated JWT tokens (access and refresh). Only present immediately after authentication/registration/refresh operations.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Token"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter JWT Bearer token"
            },
            "refreshAuth": {
                "type": "http",
                "description": "JWT Refresh Token - Use the refresh token to get new access tokens. Format: Bearer {refresh_jwt_token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and registration endpoints with RSA-512 signed JWT tokens. Supports both access and refresh tokens with database storage and automatic revocation."
        },
        {
            "name": "Industries",
            "description": "Industry management endpoints. Industries represent broad categories of business sectors (e.g., Technology, Healthcare, Finance) and can contain multiple occupations. Supports filtering, searching, sorting, and optional relation loading."
        },
        {
            "name": "Occupations",
            "description": "Occupation management endpoints. Occupations represent specific job roles within industries (e.g., Software Engineer, Data Analyst, Marketing Manager). Supports filtering, searching, and sorting capabilities."
        }
    ]
}