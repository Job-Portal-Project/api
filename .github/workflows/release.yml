name: Create Release

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get tag information
        id: tag_info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Check if this is a pre-release (contains -, alpha, beta, rc)
          if [[ $TAG_NAME =~ (alpha|beta|rc|-) ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Get previous tag
        id: prev_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          TAG_NAME="${{ steps.tag_info.outputs.tag_name }}"
          PREV_TAG="${{ steps.prev_tag.outputs.prev_tag }}"
          
          echo "## What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          if [ -n "$PREV_TAG" ]; then
            # Get commits since previous tag
            git log --pretty=format:"* %s (%h)" $PREV_TAG..HEAD --reverse >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...$TAG_NAME" >> CHANGELOG.md
          else
            # First release
            git log --pretty=format:"* %s (%h)" --reverse >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "**Initial Release**" >> CHANGELOG.md
          fi
          
          # Read the changelog content for the release
          CHANGELOG_CONTENT=$(cat CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_info.outputs.tag_name }}
          release_name: Release ${{ steps.tag_info.outputs.tag_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ steps.tag_info.outputs.is_prerelease }}

      - name: Notify release creation
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Release ${{ steps.tag_info.outputs.tag_name }} has been created!
            ${{ steps.create_release.outputs.html_url }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}