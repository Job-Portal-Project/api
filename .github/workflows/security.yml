name: Security Analysis

on:
  push:
    branches: [ 1.x ]
  pull_request:
    branches: [ 1.x ]
  schedule:
    - cron: '0 2 * * 1' # Run every Monday at 2 AM UTC

jobs:
  php-security:
    name: PHP Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          tools: psalm

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Verify Psalm installation
        run: vendor/bin/psalm --version

      - name: Run Psalm security analysis
        run: vendor/bin/psalm --show-info=false --no-cache --report=results.xml --config=psalm.xml

      - name: Upload Psalm results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: psalm-security-results
          path: results.xml


  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Run Composer audit
        run: composer audit --format=json --no-dev | tee composer-audit.json

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-results
          path: composer-audit.json

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: 1.x
          head: HEAD
          extra_args: --debug --only-verified

