name: CI

on:
  push:
    branches: [ 1.x ]
  pull_request:
    branches: [ 1.x ]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Check code formatting with Pint
        run: vendor/bin/pint --test

      - name: Run static analysis with PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=2G

      - name: Run Composer audit
        run: composer audit

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.2', '8.3', '8.4']

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: app
          POSTGRES_USER: laravel
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pgsql, pdo_pgsql, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-${{ matrix.php-version }}-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Create environment file
        run: cp .env.example .env

      - name: Configure PostgreSQL for testing
        run: |
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=localhost/' .env
          sed -i 's/DB_DATABASE=jobportal/DB_DATABASE=app/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=laravel/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=secret/' .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run database seeders
        run: php artisan db:seed --force

      - name: Generate keys
        run: APP_ENV=testing php artisan jwt:generate-keys

      - name: Run tests
        run: DB_HOST=localhost vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        if: matrix.php-version == '8.2'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Job-Portal-Project/api

