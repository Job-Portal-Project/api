name: Deploy API Documentation to GitHub Pages

on:
  push:
    branches: [ 1.x ]
    paths:
      - 'storage/api-docs/api-docs.json'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create docs directory structure
        run: |
          mkdir -p docs
          mkdir -p docs/swagger-ui

      - name: Copy API documentation
        run: |
          cp storage/api-docs/api-docs.json docs/
          
      - name: Download Swagger UI
        run: |
          curl -L https://github.com/swagger-api/swagger-ui/archive/refs/tags/v5.27.0.tar.gz | tar -xz
          cp -r swagger-ui-5.27.0/dist/* docs/swagger-ui/
          
      - name: Create Swagger UI HTML
        run: |
          cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <title>Job Portal API Documentation</title>
            <link rel="stylesheet" type="text/css" href="swagger-ui/swagger-ui.css" />
            <link rel="stylesheet" type="text/css" href="swagger-ui/index.css" />
            <style>
              html {
                box-sizing: border-box;
                overflow: -moz-scrollbars-vertical;
                overflow-y: scroll;
              }
              *, *:before, *:after {
                box-sizing: inherit;
              }
              body {
                margin:0;
                background: #fafafa;
              }
              .swagger-ui .topbar { display: none; }
            </style>
          </head>
          <body>
            <div id="swagger-ui"></div>
            <script src="swagger-ui/swagger-ui-bundle.js"></script>
            <script src="swagger-ui/swagger-ui-standalone-preset.js"></script>
            <script>
              window.onload = function() {
                const ui = SwaggerUIBundle({
                  url: './api-docs.json',
                  dom_id: '#swagger-ui',
                  deepLinking: true,
                  presets: [
                    SwaggerUIBundle.presets.apis,
                    SwaggerUIStandalonePreset
                  ],
                  plugins: [
                    SwaggerUIBundle.plugins.DownloadUrl
                  ],
                  layout: "StandaloneLayout",
                  validatorUrl: null,
                  tryItOutEnabled: true,
                  supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch']
                });
              };
            </script>
          </body>
          </html>
          EOF

      - name: Create API docs endpoint
        run: |
          cat > docs/json.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>API Documentation JSON</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              pre { background: #f5f5f5; padding: 20px; overflow: auto; }
              .download-btn { 
                background: #007bff; color: white; padding: 10px 20px; 
                text-decoration: none; border-radius: 5px; display: inline-block; 
                margin: 20px 0;
              }
            </style>
          </head>
          <body>
            <h1>Job Portal API Documentation</h1>
            <p>OpenAPI 3.0 specification for the Job Portal API</p>
            <a href="./api-docs.json" class="download-btn" download>Download JSON</a>
            <a href="./" class="download-btn">View Interactive Docs</a>
            <h2>Raw JSON:</h2>
            <pre id="json-content"></pre>
            <script>
              fetch('./api-docs.json')
                .then(response => response.json())
                .then(data => {
                  document.getElementById('json-content').textContent = JSON.stringify(data, null, 2);
                });
            </script>
          </body>
          </html>
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4